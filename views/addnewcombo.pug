doctype html
html(lang='en')
	head
		script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js')
		link(rel='stylesheet', href='https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css')
		script(src='https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js')
		link(href='https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css', rel='stylesheet')
		script(src='https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js')
		meta(charset='utf-8')
		meta(http-equiv='X-UA-Compatible', content='IE=edge')
		meta(name='viewport', content='width=device-width, initial-scale=1')
		title add new combo
		link(rel='stylesheet', href='/stylesheets/bootstrap.css')
		link(rel='stylesheet', href='/stylesheets/spin.css')
		script(href='public/js/spin.js')
		script().
			var maximumNumberOfCardsPerCombo = 7;
			var numCards = 0;
		style(type='text/css').
			.list {
				font-family:sans-serif;
				margin:0;
				padding:20px 0 0;
			}
			.list > li {
				display:block;
				background-color: #eee;
				padding:10px;
				box-shadow: inset 0 1px 0 #fff;
			}
			.avatar {
				max-width: 150px;
			}
			img {
				max-width: 100%;
			}
			h3 {
				font-size: 16px;
				margin:0 0 0.3rem;
				font-weight: normal;
				font-weight:bold;
			}
			p {
				margin-bottom:10px;
			}
			input {
				border:solid 1px #ccc;
				border-radius: 5px;
				padding:7px 14px;
				margin-bottom:5px
			}
			input:focus {
				outline:none;
				border-color:#aaa;
			}
			.addCard{
				margin-left: 20px;
			}
			.select2-container{
				margin-bottom:5px;
			}
			.comboName{
				width: 125px;
			}
			.preview{
				background-color: grey;
				width: 223px;
				height:310px;
				border-radius:10px;
				box-shadow: 2px 2px 0px 1px black;
			}
			.loader {
				border: 6px solid #f3f3f3;
				border-radius: 50%;
				margin-top:15px;
				border-top: 6px solid #3498db;
				width: 16px;
				height: 16px;
				-webkit-animation: spin 2s linear infinite; /* Safari */
				animation: spin 2s linear infinite;
			}

				/* Safari */
			@-webkit-keyframes spin {
				0% { -webkit-transform: rotate(0deg); }
				100% { -webkit-transform: rotate(360deg); }
			}

			@keyframes spin {
				0% { transform: rotate(0deg); }
				100% { transform: rotate(360deg); }
			}

	body
		.container
			hr
			.row
				.col-xs-6
					h1 Add a new combo to the database
				.col-xs-6
			hr
			.row
				.col-sm-8.col-lg-7
					.row
						.col-xs-3
							h4 Combo name: 
						.col-xs-9
							input.form-control.comboName(type='text', value='comboName')
					.row
						.col-xs-3
							h4 Type of combo:
						.col-xs-9
							select.typeOfComboSelection(name='typeOfCombo')
								option infinite mana
								option infinite damage
								option draw library
								option lethal damage
								option storm
								option graveyard
					h2 Add cards:
					.row#row1
						.col-xs-3
							h4 Card #1: 
						.col-xs-9#newCardSelectionLocation
							.loader#loader
				.col-sm-4.col-lg-5
					.preview
						img#targetImage(alt='')
						
			.row
				input.btn.btn-primary.btn-lg(type='submit', value='Add a new combo')
				input.btn.btn-secondary.btn-lg.addCard(type='button', value='+')
		hr
		footer.text-center
			.container
				.row
					.col-xs-12
						p Copyright Â© MTGComboLibrary. All rights reserved.
		// Include all compiled plugins (below), or include individual files as needed
		script(src='/js/bootstrap.js')
		script.
			function updatePicture(response){
				$("#targetImage").attr("src",response);
			}
			function addCard(response){
				numCards++;
				var $select = $("<select>").html(response);
				$select.attr("id","id"+numCards).attr("class","cardsSelection");
				if(numCards==1){
					var loader = document.getElementById("loader")
					loader.parentNode.removeChild(loader)
					$("#newCardSelectionLocation").append($select);
				}
				else{
					var newRow = $("<div class='row' id = 'row"+numCards+"'> </div>")
					newRow.append("<div class='col-xs-3'> <h4 >Card #"+numCards+":</h4> </div>")
					var secondColumn = $("<div class='col-xs-9'> </div>");
					secondColumn.append($select)
					newRow.append(secondColumn);
					var prevCard = numCards -1;
					$("#row"+prevCard).after(newRow);
				}
				$("#id"+numCards).select2({minimumInputLength: 2}).on('select2:select', function(e){
					var name = e.params.data["text"];
					$.get(window.location.href,"getPicture:"+name,updatePicture,"text");
				});
			}
			$.get(window.location.href,"addCard",addCard,"text");
			$(document).ready(function() {
				$('.typeOfComboSelection').select2();
				$('.cardsSelection').on('select2:select', function(e){
					var name = e.params.data["text"];
					$.get(window.location.href,"getPicture:"+name,updatePicture,"text");
				});

				$('.addCard').on('click',function(){
					if(numCards <maximumNumberOfCardsPerCombo){
						$.get(window.location.href,"addCard",addCard,"text")
						}
					else{
						alert("only 7 cards per combo please.");
						}
				})
			});
